plugins {
    id "java"
    id "signing"
    id 'maven-publish'
    id 'jacoco'
    id "io.freefair.lombok" version "6.4.2"
    id 'org.sonarqube' version '3.4.0.2513'
}

archivesBaseName = 'velvetdb-xodus'

dependencies {
    implementation 'com.github.zakgof:velvetdb-core:' + version
    implementation 'org.jetbrains.xodus:xodus-environment:2.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0-M1'
    testRuntimeOnly 'org.junit.platform:junit-platform-suite-engine:1.10.0-M1'
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.10.0-M1'

    testImplementation project(':velvetdb-core').sourceSets.test.output
    testImplementation 'com.github.zakgof:velvetdb-serializer-kryo:' + version

    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.assertj:assertj-core:3.23.1'
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            groupId = 'com.github.zakgof'
            version = version
            from(components["java"])
            pom {
                name = archivesBaseName
                description = 'Java-centric NoSql database - Xodus backend'
                url = 'https://github.com/zakgof/velvetdb'

                scm {
                    connection = 'scm:git:https://github.com/zakgof/velvetdb.git'
                    developerConnection = 'scm:git:https://github.com/zakgof/velvetdb.git'
                    url = 'https://github.com/zakgof/velvetdb/tree/master/velvetdb-xodus'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'zakgof'
                        name = 'Oleksandr Zakusylo'
                        email = 'zakgof@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
        mavenLocal()
    }
}

signing {
    sign(publishing.publications["mavenJava"])
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "zakgof_" + archivesBaseName
        property "sonar.organization", "zakgof"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", project.hasProperty('sonarlogin') ? sonarlogin : null
    }
}

tasks['sonarqube'].dependsOn test

