<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.zakgof.velvet.test.PrimaryIndexTest" tests="10" skipped="0" failures="0" errors="0" timestamp="2022-06-29T14:55:32" hostname="ZAKHQ" time="0.61">
  <properties/>
  <testcase name="testEqEmpty()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.419"/>
  <testcase name="testLastEmpty()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.017"/>
  <testcase name="testFirst()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.031"/>
  <testcase name="testEqUp()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.02"/>
  <testcase name="testLast()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.022"/>
  <testcase name="testGetAllOrder()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.018"/>
  <testcase name="testFirstEmpty()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.02"/>
  <testcase name="testEq()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.021"/>
  <testcase name="testEqMiddle()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.015"/>
  <testcase name="testEqDown()" classname="com.zakgof.velvet.test.PrimaryIndexTest" time="0.015"/>
  <system-out><![CDATA[[65, 88, 48, 48, 0]   ->   [74, 111, 104, 110, -80, 83, 109, 105, 116, 104, -80, 65, 88, 48, -80]
[65, 88, 48, 49, 0]   ->   [74, 111, 104, 110, -79, 83, 109, 105, 116, 104, -79, 65, 88, 48, -79]
[65, 88, 48, 50, 0]   ->   [74, 111, 104, 110, -78, 83, 109, 105, 116, 104, -78, 65, 88, 48, -78]
[65, 88, 48, 51, 0]   ->   [74, 111, 104, 110, -77, 83, 109, 105, 116, 104, -77, 65, 88, 48, -77]
[65, 88, 48, 52, 0]   ->   [74, 111, 104, 110, -76, 83, 109, 105, 116, 104, -76, 65, 88, 48, -76]
[65, 88, 48, 53, 0]   ->   [74, 111, 104, 110, -75, 83, 109, 105, 116, 104, -75, 65, 88, 48, -75]
[65, 88, 48, 54, 0]   ->   [74, 111, 104, 110, -74, 83, 109, 105, 116, 104, -74, 65, 88, 48, -74]
[65, 88, 48, 55, 0]   ->   [74, 111, 104, 110, -73, 83, 109, 105, 116, 104, -73, 65, 88, 48, -73]
[65, 88, 48, 56, 0]   ->   [74, 111, 104, 110, -72, 83, 109, 105, 116, 104, -72, 65, 88, 48, -72]
[65, 88, 48, 57, 0]   ->   [74, 111, 104, 110, -71, 83, 109, 105, 116, 104, -71, 65, 88, 48, -71]
[65, 88, 48, 48, 0]   ->   [74, 111, 104, 110, -80, 83, 109, 105, 116, 104, -80, 65, 88, 48, -80]
[65, 88, 48, 49, 0]   ->   [74, 111, 104, 110, -79, 83, 109, 105, 116, 104, -79, 65, 88, 48, -79]
[65, 88, 48, 50, 0]   ->   [74, 111, 104, 110, -78, 83, 109, 105, 116, 104, -78, 65, 88, 48, -78]
[65, 88, 48, 51, 0]   ->   [74, 111, 104, 110, -77, 83, 109, 105, 116, 104, -77, 65, 88, 48, -77]
[65, 88, 48, 52, 0]   ->   [74, 111, 104, 110, -76, 83, 109, 105, 116, 104, -76, 65, 88, 48, -76]
[65, 88, 48, 53, 0]   ->   [74, 111, 104, 110, -75, 83, 109, 105, 116, 104, -75, 65, 88, 48, -75]
[65, 88, 48, 54, 0]   ->   [74, 111, 104, 110, -74, 83, 109, 105, 116, 104, -74, 65, 88, 48, -74]
[65, 88, 48, 55, 0]   ->   [74, 111, 104, 110, -73, 83, 109, 105, 116, 104, -73, 65, 88, 48, -73]
[65, 88, 48, 56, 0]   ->   [74, 111, 104, 110, -72, 83, 109, 105, 116, 104, -72, 65, 88, 48, -72]
[65, 88, 48, 57, 0]   ->   [74, 111, 104, 110, -71, 83, 109, 105, 116, 104, -71, 65, 88, 48, -71]
[65, 88, 48, 48, 0]   ->   [74, 111, 104, 110, -80, 83, 109, 105, 116, 104, -80, 65, 88, 48, -80]
[65, 88, 48, 49, 0]   ->   [74, 111, 104, 110, -79, 83, 109, 105, 116, 104, -79, 65, 88, 48, -79]
[65, 88, 48, 50, 0]   ->   [74, 111, 104, 110, -78, 83, 109, 105, 116, 104, -78, 65, 88, 48, -78]
[65, 88, 48, 51, 0]   ->   [74, 111, 104, 110, -77, 83, 109, 105, 116, 104, -77, 65, 88, 48, -77]
[65, 88, 48, 52, 0]   ->   [74, 111, 104, 110, -76, 83, 109, 105, 116, 104, -76, 65, 88, 48, -76]
[65, 88, 48, 53, 0]   ->   [74, 111, 104, 110, -75, 83, 109, 105, 116, 104, -75, 65, 88, 48, -75]
[65, 88, 48, 54, 0]   ->   [74, 111, 104, 110, -74, 83, 109, 105, 116, 104, -74, 65, 88, 48, -74]
[65, 88, 48, 55, 0]   ->   [74, 111, 104, 110, -73, 83, 109, 105, 116, 104, -73, 65, 88, 48, -73]
[65, 88, 48, 56, 0]   ->   [74, 111, 104, 110, -72, 83, 109, 105, 116, 104, -72, 65, 88, 48, -72]
[65, 88, 48, 57, 0]   ->   [74, 111, 104, 110, -71, 83, 109, 105, 116, 104, -71, 65, 88, 48, -71]
[65, 88, 48, 48, 0]   ->   [74, 111, 104, 110, -80, 83, 109, 105, 116, 104, -80, 65, 88, 48, -80]
[65, 88, 48, 49, 0]   ->   [74, 111, 104, 110, -79, 83, 109, 105, 116, 104, -79, 65, 88, 48, -79]
[65, 88, 48, 50, 0]   ->   [74, 111, 104, 110, -78, 83, 109, 105, 116, 104, -78, 65, 88, 48, -78]
[65, 88, 48, 51, 0]   ->   [74, 111, 104, 110, -77, 83, 109, 105, 116, 104, -77, 65, 88, 48, -77]
[65, 88, 48, 52, 0]   ->   [74, 111, 104, 110, -76, 83, 109, 105, 116, 104, -76, 65, 88, 48, -76]
[65, 88, 48, 53, 0]   ->   [74, 111, 104, 110, -75, 83, 109, 105, 116, 104, -75, 65, 88, 48, -75]
[65, 88, 48, 54, 0]   ->   [74, 111, 104, 110, -74, 83, 109, 105, 116, 104, -74, 65, 88, 48, -74]
[65, 88, 48, 55, 0]   ->   [74, 111, 104, 110, -73, 83, 109, 105, 116, 104, -73, 65, 88, 48, -73]
[65, 88, 48, 56, 0]   ->   [74, 111, 104, 110, -72, 83, 109, 105, 116, 104, -72, 65, 88, 48, -72]
[65, 88, 48, 57, 0]   ->   [74, 111, 104, 110, -71, 83, 109, 105, 116, 104, -71, 65, 88, 48, -71]
[65, 88, 48, 48, 0]   ->   [74, 111, 104, 110, -80, 83, 109, 105, 116, 104, -80, 65, 88, 48, -80]
[65, 88, 48, 49, 0]   ->   [74, 111, 104, 110, -79, 83, 109, 105, 116, 104, -79, 65, 88, 48, -79]
[65, 88, 48, 50, 0]   ->   [74, 111, 104, 110, -78, 83, 109, 105, 116, 104, -78, 65, 88, 48, -78]
[65, 88, 48, 51, 0]   ->   [74, 111, 104, 110, -77, 83, 109, 105, 116, 104, -77, 65, 88, 48, -77]
[65, 88, 48, 52, 0]   ->   [74, 111, 104, 110, -76, 83, 109, 105, 116, 104, -76, 65, 88, 48, -76]
[65, 88, 48, 53, 0]   ->   [74, 111, 104, 110, -75, 83, 109, 105, 116, 104, -75, 65, 88, 48, -75]
[65, 88, 48, 54, 0]   ->   [74, 111, 104, 110, -74, 83, 109, 105, 116, 104, -74, 65, 88, 48, -74]
[65, 88, 48, 55, 0]   ->   [74, 111, 104, 110, -73, 83, 109, 105, 116, 104, -73, 65, 88, 48, -73]
[65, 88, 48, 56, 0]   ->   [74, 111, 104, 110, -72, 83, 109, 105, 116, 104, -72, 65, 88, 48, -72]
[65, 88, 48, 57, 0]   ->   [74, 111, 104, 110, -71, 83, 109, 105, 116, 104, -71, 65, 88, 48, -71]
[65, 88, 48, 48, 0]   ->   [74, 111, 104, 110, -80, 83, 109, 105, 116, 104, -80, 65, 88, 48, -80]
[65, 88, 48, 49, 0]   ->   [74, 111, 104, 110, -79, 83, 109, 105, 116, 104, -79, 65, 88, 48, -79]
[65, 88, 48, 50, 0]   ->   [74, 111, 104, 110, -78, 83, 109, 105, 116, 104, -78, 65, 88, 48, -78]
[65, 88, 48, 51, 0]   ->   [74, 111, 104, 110, -77, 83, 109, 105, 116, 104, -77, 65, 88, 48, -77]
[65, 88, 48, 52, 0]   ->   [74, 111, 104, 110, -76, 83, 109, 105, 116, 104, -76, 65, 88, 48, -76]
[65, 88, 48, 53, 0]   ->   [74, 111, 104, 110, -75, 83, 109, 105, 116, 104, -75, 65, 88, 48, -75]
[65, 88, 48, 54, 0]   ->   [74, 111, 104, 110, -74, 83, 109, 105, 116, 104, -74, 65, 88, 48, -74]
[65, 88, 48, 55, 0]   ->   [74, 111, 104, 110, -73, 83, 109, 105, 116, 104, -73, 65, 88, 48, -73]
[65, 88, 48, 56, 0]   ->   [74, 111, 104, 110, -72, 83, 109, 105, 116, 104, -72, 65, 88, 48, -72]
[65, 88, 48, 57, 0]   ->   [74, 111, 104, 110, -71, 83, 109, 105, 116, 104, -71, 65, 88, 48, -71]
]]></system-out>
  <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
</testsuite>
